#!/bin/env python

from z3 import *

x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29 ,x30 ,x31, x32, x33, x34, x35 = Ints('x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 x31 x32 x33 x34 x35')
s = Solver()
s.add(x18 + (((((((x24 * -6 - x4) - x8) + x2 * 6 + x9 * -5 + x5 * 9 + x31 * -10 + x7 * 2 + x15 * 4 + x12 * 2 + x29 * -5 + x0 * 3) - x13) + x26 * 4) - x33) - x19) + x3 * 9 + x1 * -7 + x11 * 4 + x35 * 3 + x23 * 9 + x6 + x27 * -9 + x14 * -8 + x10 * -6 + x34 * -4 + x30 * 10 + x28 * 10 + x25 * 7 + x32 + x22 * 9 + x21 * -9 + x17 * 8 + x20 * -5 + x20 * -5 == 1097) #1
s.add(x19 * 9 + ((((x9 * 2 + x17 * -9 + x20 * 8 + x28 * -4 + x18 * -8) - x29) + x3 * -6 + x13 * 10 + x34 * -10 + x1 * -3) - x2) + x24 * 5 + x33 * -2 + x35 * -8 + x27 * -5 + x26 * 3 + x10 * 2 + x12 * 5 + x23 * -6 + x22 + x16 * 5 + x14 * 3 + x31 + x11 * 3 + x25 * -2 + x32 * 7 + x21 * 9 + x4 * -3 + x7 * 7 + x15 * -5 + x8 * 6 + x6 * 2 + x30 * -9 + x0 * 7 == 208) #2
s.add(x30 * 2 + ((((((((((x3 * -4 + x34 + x23 * 4 + x18) - x7) + x20 * -5 + x24 * -3 + x1 * 6 + x13 * -3 + x10 * -3 + x14 * -6 + x33 * -10) - x26) + x35 * -6 + x8 * -5 + x2 + x5 * -3 + x0 * 10 + x6 * -7) - x12) + x28 * -10 + x31 * 8 + x9 * -2 + (x15 * 8 - x15)) - x32) + x27 * -4 + x22 * -3 + x19 * -3 + x25 * 7 + x16 * 2 + x16 + x21 * -4 + x4 * 6) - x11) == -3224) #3
s.add(x10 * -4 + ((((((x12 * 8 + x8 * -7 + x15 * 5 + x28 * -2 + x34 * -8 + x5 * -6 + x13 * 8 + x35 * -3 + x30 * 2 + x17 * 4 + x3 * 5 + x18 * -3 + x27 * -5) - x14) + x29 * -10 + x25 * -4 + x26 * 6) - x19) + x20 * -5 + x11 * -2 + x0 * 6 + x6 * 2 + x2 * -2 + x4 * -10 + x1 * 7 + x23 + -x32 + -x32 + x7 * 2) - x31) + x9 * -2 + x16 * -7 + x21 * 9 + x24 * 4 == -1557) #4
s.add(x26 * -2 + ((((x32 + x27 * -9 + x1 * -9 + x4 * -9 + x20 * -4 + x16 * -5 + x29 * -4 + x33 * -2 + x25 * 2 + x3 * -7 + x11 * -3 + x21 * -3 + x17 * 9 + x28 * 5 + x10 * 5 + x7 * 5) - x6) + x12 * -10 + x0 * 7 + x35 * 7 + x34 * 6 + x23 * -3 + x19 * -6 + x14 * -3 + x31 * -2 + x2 * 3) - x8) + x15 * 7 + x30 * 9 + x9 * -8 + x5 * 2 + x18 * 3 + x24 * 5 + x13 * -9 == -2140) #5
s.add(x22 * -9 + x32 * -10 + x1 * -7 + x5 * -3 + x26 * -7 + x0 * -8 + x12 * 5 + x6 * -9 + x33 * 6 + x24 * -5 + x35 * 9 + x27 * 2 + x7 * -6 + x31 * -3 + x16 + x2 * 6 + x14 * -6 + x19 * -9 + x28 * 7 + x8 * 3 + x20 * -7 + x23 * 7 + x15 * -3 + x17 + x11 * 8 + x9 * 10 + x10 * -4 + x3 * -2 + x34 * -5 + x18 * 5 + x13 * -2 + x25 * -3 + x4 * 5 == -1826) #6
s.add(x32 * -6 + x26 * -7 + x34 * 3 + x33 * -2 + x15 * -6 + x0 * -8 + x22 * -8 + x27 * 4 + x3 * -5 + x8 + x18 * 10 + x20 * -5 + x7 * 4 + x9 * 6 + x10 * -8 + x2 * 8 + x30 * -9 + x14 * 7 + x29 * 6 + x21 * 10 + x12 * -9 + x5 + x11 * -6 + x24 * -6 + x28 * 6 + x31 * 7 + x6 * -7 + x23 * -5 + x16 * 3 + x19 + x13 * -2 + x1 * 5 + x17 * -9 + x25 == -2408) #7
s.add(x1 * -4 + x18 * 7 + x20 * -6 + x13 * -9 + x10 * 7 + x21 * 2 + x12 * -4 + x17 * 3 + x14 * 3 + x4 * 7 + x7 * 10 + x3 * -3 + x22 * 4 + x31 * -5 + x24 * -4 + x8 * 5 + x23 * 7 + x2 * 2 + x33 * -2 + x11 * -5 + x0 * 8 + x30 * 8 + x27 * -8 + x34 * -6 + x19 * 7 + x6 * -5 + x26 * -3 + x9 * 10 + x16 * 5 + x15 * 2 + x25 * 10 + x35 * 10 + x32 + x5 * 5 + x28 * -4 == 5211) #8
s.add(x9 * 2 + ((x17 * -7 + x25 * -10 + x13 * 9 + x31 * -7 + x19 * 6 + x11 * 8 + x10 * 3 + x21 * 4 + x22 * 6 + x0 * 4 + x23 * 6 + x26 * 10 + x32 * 6 + x35 * 7 + x33 * 2 + x24 + x14 * 10 + x34 * 10 + x28 * 8 + x18 * -4 + x8 * 9 + x27 * 2 + x6 * 7 + x16 * -2 + x29 * -4 + x5 * 2) - x4) + x15 * -3 + x30 * 7 + x12 * -6 + x2 * -2 == 5308) #9
s.add(x30 * -6 + x9 * 3 + x28 + x2 * -8 + x32 * 8 + x3 * -3 + x15 * -9 + x11 * -3 + x8 * -10 + x27 * 5 + x21 * 5 + x24 * -5 + x6 * 4 + x12 + x25 * 2 + x16 * -8 + x1 * -10 + x34 * -10 + x35 * 5 + x13 * 9 + x0 * -2 + x18 * 4 + x29 + x22 * -10 + x31 * 6 + x4 * -2 + x5 * 6 + x14 * 6 + x23 * 5 + x26 * 4 + x20 * 6 + x10 * 7 + x33 * -10 + x7 == -226) #10
s.add(x5 * 4 + (((((x1 + x0) * 7 + x2 * -7 + x16 * 4 + x21 * -3 + x20 * 10 + x34 * 4 + x30 * -6 + x23 * 8 + x17 + x10 * -4 + x19 * -8 + x6 * -4 + x33 * 5) - x29) + x4 * 2 + x9 * 9 + x28 * -9 + x13 * -7 + x14 * 7 + x27 * 4 + x7 * -10) - x35) + x11 * 5 + x18 * -3 + x22 * -8 + x24 * -7 + x8 * -4 + x32 + (x15 * 8 - x15) + x12 * -5 + x26 * 9 + x3 * 10 == 1674) #11
s.add(x11 * -8 + ((((x27 * -7 + x26 * -9 + x24 * -9 + x9 * -10 + x2 * -6 + x34 * 4 + x31 * -8 + x7 * 3 + x0 * 4 + x19 * -4) - x18) + x21 * 5 + x13 * 3 + x1 * 10 + x22 * -4 + x30 * 4 + x8 * -10 + x17 * 10 + x5 * 6 + x23 * 7 + x20 * -2 + x14 * 3 + x16 * 10) - x32) + x29 * 4 + x28 * -9 + x15 + x35 * 8 + x6 * 2 + x12 * -3 + x25 * -5 + x10 * -2 + x4 * -5 + x3 * 6 + x33 == -2279) #12
s.add(x15 * 7 + ((((x27 * -4 + (x14 * 2 - x2) * 2 + x4 + x0 * 5 + x26 + x8 * 4) * 2 - x35) + x29 * 7 + x23 * 5 + x20 * -5 + x31 * 6 + x21 * 5 + x6 * -7 + x11 * 10 + x22 * -2 + x5 * -6 + x32 * -10 + x25 * -7 + x33 * -7 + x34) - x13) + x12 * -4 + x7 * 2 + x16 * 5 + x3 * 3 + x9 * -10 + x24 * 3 + x10 * 4 + x28 * 5 == 332) #13
s.add(x16 * 9 + ((((((x11 * -6 + x8 * -10 + x7 * -6 + x21 * -6 + x19 * -2 + x0 * 9 + x9 * -9 + x1 * 4) - x31) + x24 * -4 + x29 * 3 + x26 * 2 + x32 * -6 + x17 * 4 + x35 * -9 + x34 * 6 + x30 * -9 + x10 * -3 + x27 * -3) - x23) + x4 * 6 + x6 * -8 + x2 * -9 + x25 * -2 + x28 * -9 + x22 * 5 + x18 * 8 + x20 * -8 + x13 * -4 + x15 * 7 + x3 * -4) - x12) == -5180) #14
s.add(x5 * -2 + ((x8 * -7 + x32 * -5 + x34 * 3 + x1 * -6 + x14 * -8 + x23 + x24 * -10 + x28 * -8 + x12 * -7 + x29 * -5 + x17 * 8 + x21 * 8 + x6 * 8 + x10 * -3 + x27 * 10 + x11 * 8 + x2 * 6 + x26 * -6 + x25 * -10 + x20 + x15 * -9 + x3 * -7 + x13 * 3) - x33) + x18 * -8 + x30 * 10 + x7 * 2 + x4 * 8 + x9 * 2 + x31 * -7 + x22 * -3 + x19 * 6 + x35 * -2 + x0 * 9 + x16 * -4 == -3731) #15
s.add(x35 * -4 + x33 * -2 + x19 * -5 + x0 * 5 + x5 * -6 + x7 * -7 + x10 * 10 + x3 * 6 + x2 * 7 + x12 * -7 + x24 * 7 + x18 + x27 * -5 + x26 * -3 + x14 * -10 + x1 * -9 + x23 * 6 + x21 * -8 + x28 * -10 + x32 + x11 * -5 + x6 * 8 + x13 * 2 + x30 * 7 + x22 * -5 + x34 * 6 + x15 * -6 + x29 * 10 + x31 * 9 + x20 * 6 + x8 * -4 + x25 * 3 + x17 * 8 + x16 * 4 == 448) #16
s.add(x5 * 3 + x8 * -10 + x0 * 6 + x21 * -5 + x3 * 2 + x11 * 6 + x9 * 5 + x31 * -5 + x25 * 9 + x28 * 8 + x1 * 3 + x33 * 9 + x12 * 7 + x16 * 8 + x13 * -5 + x30 * -3 + x2 * -6 + x22 * 10 + x23 + x18 * -9 + x32 * 9 + x29 * -6 + x6 * -10 + x35 * -10 + x10 * -8 + x4 * -2 + x19 * -4 + x14 * -10 + x20 * -8 + x27 * 5 + x15 * 8 + x17 * -7 == -20) #17
s.add(x27 * 10 + (((((((((x34 * 6 + x6 * -6 + x13 * 2 + x0 * 4 + x32 * -2 + x19 * 6) - x21) + x33 * -2 + x9 + x11 * -8 + x29 * -9 + x4 * -3 + x7 * -5 + x24 * -6 + x10 * -9 + x31 + x17 * -9 + x30 * 3 + x22 * 9 + x16 * -10 + x18 * -9) - x3) + x35 * 7) - x15) - x26) + x23 * 8 + x25 * 3 + x20 * -2) - x2) + x12 * 10 == -103) #18
s.add(x1 * 10 + ((((x22 * -10 + x11 * 8 + x5 * -6 + x29 * -10 + x13 * -10 + x4 * 3 + x7 * -4 + x20 * 10 + x35 * -8 + x33 * 8 + x32) - x3) + x17 * 2 + x9 * 7 + x2 * 9 + x10 * 8 + x14 + x26 * -8 + x6 * -8 + x21 + x12 * 6 + x15 * -6 + x19 * 6 + x31 * 2 + x25 * 8 + x25 + x8 * 8 + x8 + x34 * -8 + x0 * -3) - x18) == 2465) #19
s.add(x34 * 5 + ((x4 * -3 + x21 * -8 + x24 * 9 + x32 + x6 * -5) - x17) + x16 * 9 + x23 * -7 + x29 * 5 + x18 + x7 * 4 + x1 * -7 + x9 * 3 + x10 * 4 + x19 * -5 + x26 * -10 + x30 * 7 + x31 * -7 + x11 + x35 * 5 + x5 * 6 + x13 * -2 + x15 * -9 + x0 * -9 + x8 * -4 + x3 * 9 + x28 * 6 + x20 * 3 + x22 * -6 + x25 * 4 + x27 * -9 + x33 * 9 + x14 + x12 * 8 + x2 * -6 == 551) #20
s.add(x17 * -10 + (((x24 * 8 - x2) + x13 * 7 + x4 * -4 + x16 * 10 + x8 * -8 + x5 * -3 + x32 * -2 + x22 * 7 + x30 * 9) - x12) + x0 * 6 + x21 * -8 + x7 * 7 + x28 * 4 + x6 * 8 + x9 * 4 + x18 * 8 + x27 * 8 + x34 * 4 + x20 * 10 + x23 * -6 + x19 * 6 + x33 * 10 + x26 * 8 + x10 * 3 + x15 * -4 + x3 * -8 + x31 * -8 + x29 * 7 + x11 * 7 + x1 * 5 + x25 * 8 + x35 * 2 + x35 == 7868) #21
s.add((((x28 * 7 + x29 * -10) - x18) + x26 * -9 + x3 * 4 + x20 * 5 + x22 * 2 + x5 * 7 + x7 * -6 + x16 * -10 + x27 * -4 + x34 * 4 + x30 + x32 + x13 * 4 + x10 * -2 + x25 * -2 + x21 * 8 + x17 * -3 + x33 * -6 + x9 * 5 + x1 * -6 + x8 * 8 + x11 * 6 + x0 * -7 + x12 * -8 + x6 * 2 + x6 + x2 * -5 + x2 * -5 + x24 * -4 + x14 * -10 + x4 * 6 + x19 * -7 + x31 * -9) - x15 == -4796) #22
s.add(x12 + ((((((((x16 * 6 + x0 * -3) - x2) + x25 * 8) - x13) + x24 * 3 + x14) - x10) + x11 * 2 + x17 * 3 + x29 * -6 + x20 * -5 + x1 * 3 + x34 * -3 + x19 * -5 + x18 * -4 + x33 * 2 + x3 * 6 + x28 * -2 + x26 * 4 + x27 * 2 + x31 + x15 * -2 + x22 * 3 + x5 * 10 + x23 * -10 + x7 * -3 + x32 * 8 + x4 * -2 + x35 * 3 + x6 * -3 + x21 * 8 + x30 * -8) - x8) == 825) #23
s.add(x9 * 8 + (((x17 + x34 * 2) * 2 + x32 * -5 + x11 * 7 + x27 * 7 + x12 * 3 + x21 * 6 + x30 * 2 + x1 * 6 + x22 * -4 + x29 * -3 + x5 * -2 + x23 * 5 + x19 + x2 * -5 + x8 * 3 + x3 * 3 + x31 * 4 + x10 * -8 + x18 * -8 + x16 * 8 + x25 * 7 + x33 * -9 + x24 * 3 + x14 * -5 + x35 * 9 + x28 * -10 + x26 * -10 + x20 * 3 + x0 * 2 + x0 + x15 * 8 + x7 * 4 + x7) - x13) == 3506) #24
s.add(x2 * 7 + (((x31 * 5 - x30) + x6 * -7 + x25 * -3 + x15 * 4 + x18 * -6 + x16 * 10 + x19 * -10) - x11) + x23 + x8 * -4 + x34 * 9 + x32 * 7 + x24 * -9 + x12 * 4 + x22 * 6 + x3 * -8 + x26 * 9 + x13 * 5 + x9 * -4 + x1 * -7 + x0 * 8 + x21 * 4 + x27 * -3 + x20 * -8 + x10 * 7 + x35 * 8 + x4 * -4 + x29 * 2 + x33 * -10 + x7 * 8 + x14 * -5 + x5 * -10 == -815) #25
s.add(x18 * 6 + x27 * -7 + x24 * 10 + x14 * 10 + x2 * 8 + x8 * -2 + x11 * 6 + x12 * 10 + x22 * -6 + x21 * 8 + x29 * 3 + x16 * -7 + x13 + x35 * -7 + x33 * -10 + x34 * 6 + x5 * 8 + x31 * 2 + x9 * -7 + x20 * -10 + x26 * -2 + x25 * 6 + x30 * 10 + x17 * 7 + x1 * -5 + x4 * -2 + x23 * 9 + x15 * -7 + x19 * -10 + x10 * 6 + x7 * -8 + x0 * -10 + x3 * 8 + x28 * 9 + x32 == 1201) #26
s.add(x32 * -5 + ((((x8 * 9 + x30 * 3 + x21 * -8) - x10) + x1 * 7 + x33 * -3 + x9 * -3 + x15 * 10 + x16 * -5 + x7 + x35 * 7 + x26 + x4 + x3 * -7 + x17 * -8 + x25 * 2) - x2) + x14 * 7 + x11 * -10 + x12 * -2 + x0 * 7 + x29 * -4 + x24 * 8 + x34 * -8 + x23 + x31 * -6 + x13 * 7 + x28 * -3 + x20 * 6 + x18 * -3 + x19 * -4 + x22 * 4 + x5 * -3 == 548) #27
s.add(x4 * -4 + ((x0 + x30 * -2 + x11 * -8 + x29 * -2 + x27 * 5 + x7 * 7 + x34 * -5 + x9 * 8 + x20 + x8 * 6 + x2 * -10 + x28 * 3 + x22 * -8 + x21 * 10 + x1 * 7 + x32 * -3 + x14 * 8 + x3 * 4 + x10 * 2 + x5 * -6 + x25 * 6) - x18) + x13 * 5 + x6 * -9 + x16 * 4 + x12 * -4 + x15 * 10 + x26 * -9 + x24 * -5 + x35 * 8 + x35 + x19 + x23 * 8 + x17 * 4 + x33 * -6 == 3576) #28
s.add(x11 * -9 + x1 * 6 + x20 * 10 + x8 * 8 + x5 * -5 + x4 * 8 + x31 * 6 + x33 * -3 + x29 * 8 + x24 * 6 + x16 * -4 + x22 * 10 + x2 * -5 + x21 * 5 + x15 * 8 + x6 * 3 + x13 * -3 + x14 * -8 + x7 * -10 + x10 * -6 + x9 * -6 + x12 * -10 + x0 * -9 + x23 * 9 + x3 * 6 + x32 * 7 + x27 * -10 + x28 * 3 + x26 + x34 * -9 + x35 * 6 + x25 * -8 + x19 * -5 + x18 * -5 + x17 * -4 == 256) #29
s.add(x6 * -3 + ((((x17 * 3 + x32 * -2 + x10 * -5 + x22 * 6 + x7 * -8 + x1 * 6) - x12) + x27 * 8 + x15 * -7 + x25 * 7 + x19 * -4 + x5 * 10 + x34 * -7 + x13 * 8 + x4 + x8 * 8 + x30 * -5 + x0 + x21 * 7) - x26) + x3 * 10 + x23 * 6 + x18 * -5 + x11 * 10 + x2 * -3 + x35 * -7 + x16 * -6 + x14 * 2 + x31 * -5 + x29 * -3 + x28 * 5 + x33 * -4 + x9 + x24 * -3 == 834) #30
s.add(x12 * -7 + ((x31 * 2 + x7 * 9 + x6 * 3 + x19 * -5 + x32 * 2 + x15 * -9 + x26 * 8 + x4 * -7 + x25 * 6 + x1 * -5 + x29 * 8 + x22 * 7 + x18 * -7 + x20 * -6 + x33 * 6 + x16 * 8 + x28 * 10 + x13 * 10 + x17 * 5) - x24) + x2 * 3 + x5 * 2 + x8 * 7 + x35 * -6 + x9 * -10 + x11 * -3 + x10 * 5 + x21 * 3 + x30 * 7 + x23 * 2 + x3 * -8 == 1363) #31
s.add(x33 * -9 + ((((((((((x32 * 6 - x16) - x18) + x1 * 8 + x10 * 4 + x17 * -6 + x19 * 8 + x9 * -8 + x26 * 9) - x8) + x0 * 9 + x13 * 4 + x31 * -2 + x29 * -4 + x6 * 8 + x35 * 6 + x23 * 10 + x11 * 3 + x20 * -7 + x28 * -3 + x30 * 10) - x12) + x3 * -10) - x24) + x2 * -2 + x5 * -3) - x14) + x34 * -5 + x25 * -9 + x22 * 4 + x21 * -2 + x27 * -7 + x7 * 10 == -537) #32
s.add(x2 * 7 + x26 * -10 + x11 * 7 + x20 * 10 + x9 * 7 + x13 * -6 + x6 * 3 + x29 * 5 + x32 * 2 + x0 * 6 + x25 * -9 + x24 * -6 + x15 * 7 + x18 * 8 + x28 * -10 + x21 * -7 + x12 + x30 * -9 + x23 * -8 + x27 * -3 + x35 * 8 + x8 * 6 + x1 * -4 + x7 * -8 + x33 * 8 + x22 * -3 + x10 * -2 + x14 * 9 + x19 * 4 + x5 * 3 + x31 * -7 + x3 * -7 + x16 * 2 + x17 * 5 == 2453) #33
s.add(x5 * 2 + ((((((x2 * 10 + x34 * -5 + x0 * -5 + (x7 * 8 - x7) + x1 * -6) - x15) + x21 * 4 + x18 * -9 + x6 * -9 + x16 * 2 + x23 * -8 + x19 * 4 + x8 * 7 + x17 * 7 + x11 * 7 + x10 * 6 + x24 * -9 + x12 * -10) - x9) + x32 * -2 + x35 + x30 * -6 + x14 * -7 + x31 * -7 + x4 * 9 + x26 * 10 + x3 * -9 + x25 * 8) - x20) == -1878) #34
s.add(x10 * 5 + ((((((((((x30 * -8 + x9 * 7 + x27 * -4 + x18 + x20 + x26 * 4 + x8 * 9) - x24) + x7 * -10 + x35 * 5) - x21) + x33 * 3 + x31 * -6 + x29 * 3 + x3 * -5) - x34) + x2 * -3 + x11 * -10 + x4 * -9 + x13 * 5 + x12 * 6 + x15 * 10 + x16 * -3) - x17) + x0 + x19 * -10) - x1) + x25 * 4 + x5 * 9 + x22 * 4 + x28 + x32 * 3 + x14 * -7 + x6 * 3 == 1220) #35
s.add(x6 * 4 + ((((x18 * -6 + x1 * -5 + x0 * -6 + x4 * -4 + x27 * 4 + x9 * 2 + x8 * -3 + x30 * -7 + x7 * 8 + x35 * 4 + x21 * -10 + x34 * -3 + x29 * 9 + x14 * 2 + x19 * 2 + x23 * -8 + x15 * 9 + x10 * -2 + x26 * -10 + x2 * -3 + x13 * 6 + x5 * 4 + x32 * -7) - x31) + x3 * -9) - x28) + x17 * 7 + x16 * 4 + x11 * 7 + x22 * -9 + x33 * -6 + x25 * -10 == -2594) #36
print(s.check())
print(s.model())

